plugins {
    id "me.champeau.jmh" version "0.7.2"
}

// Uncomment as needed for benchmarking against released versions of Micrometer
//repositories {
//    mavenCentral()
//    maven {
//        url "https://repo.spring.io/milestone"
//    }
//}

dependencies {
    jmh project(':micrometer-core')
//    jmh 'io.micrometer:micrometer-core:1.13.0-M2'
    jmh project(':micrometer-registry-prometheus')
//    jmh 'io.micrometer:micrometer-registry-prometheus:1.13.0-M2'
    jmh project(':micrometer-registry-otlp')
//    jmh 'io.micrometer:micrometer-registry-otlp:1.13.0-M2'

    jmh libs.dropwizardMetricsCore5
    jmh libs.prometheusMetrics

    jmh libs.dropwizardMetricsCore
    jmh libs.guava

    jmh libs.jmhCore

    jmh libs.logback12

    // Nebula doesn't like having jmhAnnotationProcessor without jmh so we just add it twice.
    jmh libs.jmhAnnotationProcessor
    jmhAnnotationProcessor libs.jmhAnnotationProcessor
}

String jmhIncludes = findProperty('jmhIncludes')
jmh {
    fork = 1
    warmupIterations = 1
    iterations = 1
    // benchmarkMode = ['SampleTime']
    // timeUnit = 'us'
    duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
    zip64 = true

    // ./gradlew :micrometer-benchmarks-core:jmh -PjmhIncludes=io.micrometer.benchmark.core.CounterBenchmark
    if (jmhIncludes != null) {
        includes = [jmhIncludes]
    }
}

tasks.named('jmh') {
    outputs.upToDateWhen { false }
}
